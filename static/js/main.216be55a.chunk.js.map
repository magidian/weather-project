{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","displayWeather","data","name","weather","icon","description","main","temp","humidity","speed","wind","document","querySelector","innerText","src","body","style","backgroundImage","search","city","value","fetch","then","response","json","console","log","className","onKeyDown","e","key","type","placeholder","onClick","xmlns","width","height","viewBox","fill","d","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+KA6EeA,MA3Ef,WACE,IAYQC,EAAiB,SAAAC,GAAS,IACtBC,EAASD,EAATC,KADqB,EAEDD,EAAKE,QAAQ,GAAnCC,EAFuB,EAEvBA,KAAMC,EAFiB,EAEjBA,YAFiB,EAGJJ,EAAKK,KAAxBC,EAHuB,EAGvBA,KAAMC,EAHiB,EAGjBA,SACNC,EAAUR,EAAKS,KAAfD,MACRE,SAASC,cAAc,SAASC,UAAY,cAAgBX,EAC5DS,SAASC,cAAc,SAASE,IAC9B,qCAAuCV,EAAO,OAChDO,SAASC,cAAc,gBAAgBC,UAAYR,EACnDM,SAASC,cAAc,SAASC,UAAYN,EAAO,QACnDI,SAASC,cAAc,aAAaC,UAClC,aAAeL,EAAW,IAC5BG,SAASC,cAAc,SAASC,UAAY,eAAiBJ,EAAQ,OAErEE,SAASI,KAAKC,MAAMC,gBAClB,8CAAgDf,EAAO,MAGnDgB,EAAS,WA9BI,IAAAC,IA+BJR,SAASC,cAAc,eAAeQ,MA9BrDC,MACE,qDACEF,EADF,wDAMCG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACrB,GAAD,OAAUD,EAAeC,MAC/BwB,QAAQC,MAsBRf,SAASC,cAAc,eAAeQ,MAAQ,IAQlD,OACE,qBAAKO,UAAU,MAAf,SACE,sBAAKA,UAAU,OAAf,UACA,sBAAKA,UAAU,SAAf,UACE,uBAAOC,UATX,SAAoBC,GACJ,UAAVA,EAAEC,KACJZ,KAO8Ba,KAAK,OAAOJ,UAAU,aAAaK,YAAY,WAC7E,wBAAQC,QAASf,EAAjB,SACE,qBACEgB,MAAM,8BACNC,MAAM,QACNC,OAAO,QACPC,QAAQ,YACRC,KAAK,UALP,SAOE,sBACEC,EAAE,4VAKV,sBAAKZ,UAAU,kBAAf,UACE,oBAAIA,UAAU,SACd,oBAAIA,UAAU,SACd,sBAAKA,UAAU,OAAf,UACE,qBAAKb,IAAI,GAAG0B,IAAI,GAAGb,UAAU,SAC7B,qBAAKA,UAAU,cAAf,4BAEF,qBAAKA,UAAU,aACf,qBAAKA,UAAU,kBC1DRc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxC,SAASyC,eAAe,SAM1BX,K","file":"static/js/main.216be55a.chunk.js","sourcesContent":["import './App.css';\n\nfunction App() {\n  const fetchWeather = city => {\n    fetch(\n      \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n        city +\n        \"&appid=\" +\n        process.env.REACT_APP_API_KEY +\n        \"&units=metric\"\n    )\n      .then((response) => response.json())\n      .then((data) => displayWeather(data));\n      console.log()\n  }\n    const displayWeather = data => {\n      const { name } = data;\n    const { icon, description } = data.weather[0];\n    const { temp, humidity } = data.main;\n    const { speed } = data.wind;\n    document.querySelector(\".city\").innerText = \"Weather in \" + name;\n    document.querySelector(\".icon\").src =\n      \"https://openweathermap.org/img/wn/\" + icon + \".png\";\n    document.querySelector(\".description\").innerText = description;\n    document.querySelector(\".temp\").innerText = temp + \"Â°C\";\n    document.querySelector(\".humidity\").innerText =\n      \"Humidity: \" + humidity + \"%\";\n    document.querySelector(\".wind\").innerText = \"Wind speed: \" + speed + \"km/h\";\n    // document.querySelector(\".weather\").classList.remove(\"loading\");\n    document.body.style.backgroundImage =\n      \"url('https://source.unsplash.com/1600x900/?\" + name + \"')\";\n    }\n\n    const search = () => {\n      fetchWeather(document.querySelector(\".search-bar\").value);\n      document.querySelector(\".search-bar\").value = ''\n    }\n\n    function keyHandler(e) {\n      if (e.key === \"Enter\") {\n        search()\n      }\n    }\n  return (\n    <div className=\"App\">\n      <div className=\"card\">\n      <div className=\"search\">\n        <input onKeyDown={keyHandler} type=\"text\" className=\"search-bar\" placeholder=\"Search\" />\n        <button onClick={search}>\n          <svg\n            xmlns=\"https://www.w3.org/2000/svg\"\n            width=\"1.5em\"\n            height=\"1.5em\"\n            viewBox=\"0 0 24 24\"\n            fill=\"#ffffff\"\n          >\n            <path\n              d=\"M23.809 21.646l-6.205-6.205c1.167-1.605 1.857-3.579 1.857-5.711 0-5.365-4.365-9.73-9.731-9.73-5.365 0-9.73 4.365-9.73 9.73 0 5.366 4.365 9.73 9.73 9.73 2.034 0 3.923-.627 5.487-1.698l6.238 6.238 2.354-2.354zm-20.955-11.916c0-3.792 3.085-6.877 6.877-6.877s6.877 3.085 6.877 6.877-3.085 6.877-6.877 6.877c-3.793 0-6.877-3.085-6.877-6.877z\"\n            />\n          </svg>\n        </button>\n      </div>\n      <div className=\"weather loading\">\n        <h2 className=\"city\"></h2>\n        <h1 className=\"temp\"></h1>\n        <div className=\"flex\">\n          <img src=\"\" alt=\"\" className=\"icon\" />\n          <div className=\"description\">Search city</div>\n        </div>\n        <div className=\"humidity\"></div>\n        <div className=\"wind\"></div>\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}