{"version":3,"sources":["App.js","index.js"],"names":["App","fetchWeather","city","a","fetch","response","ok","json","data","displayWeather","status","Error","console","log","message","name","weather","icon","description","main","temp","humidity","speed","wind","date","Date","document","querySelector","innerText","src","Math","round","dateFormat","body","style","backgroundImage","search","input","value","className","onKeyDown","e","key","type","placeholder","onClick","xmlns","width","height","viewBox","fill","d","alt","ReactDOM","render","StrictMode","getElementById"],"mappings":"uOAyGeA,MArGf,WACE,IAAMC,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,+EAEMC,MACrB,qDACEF,EADF,wDAHe,YAEXG,EAFW,QASJC,GATI,iCAUID,EAASE,OAVb,OAUTC,EAVS,OAWfC,EAAeD,GAXA,2BAYc,MAApBH,EAASK,OAZH,uBAaT,IAAIC,MAAM,aAbD,0DAgBjBC,QAAQC,IAAI,eAAiB,KAAEC,SAhBd,0DAAH,sDAoBZL,EAAiB,SAACD,GAAU,IACxBO,EAASP,EAATO,KADuB,EAEDP,EAAKQ,QAAQ,GAAnCC,EAFuB,EAEvBA,KAAMC,EAFiB,EAEjBA,YAFiB,EAGJV,EAAKW,KAAxBC,EAHuB,EAGvBA,KAAMC,EAHiB,EAGjBA,SACNC,EAAUd,EAAKe,KAAfD,MACFE,EAAO,IAAIC,KACjBC,SAASC,cAAc,SAASC,UAAY,cAAgBb,EAC5DW,SAASC,cAAc,SAASE,IAC9B,qCAAuCZ,EAAO,OAChDS,SAASC,cAAc,gBAAgBC,UAAYV,EACnDQ,SAASC,cAAc,SAASC,UAC9BE,KAAKC,MAAa,GAAPX,GAAa,GAAK,QAC/BM,SAASC,cAAc,aAAaC,UAClC,aAAeP,EAAW,IAC5BK,SAASC,cAAc,SAASC,UAAY,eAAiBN,EAAQ,OACrEI,SAASC,cAAc,SAASC,UAAYI,IAC1CR,EACA,gCAEFE,SAASO,KAAKC,MAAMC,gBAClB,8CAAgDpB,EAAO,MAGrDqB,EAAS,WACb,IAAMC,EAAQX,SAASC,cAAc,eAAeW,MACtC,KAAVD,IAGFpC,EAAaoC,GACbX,SAASC,cAAc,eAAeW,MAAQ,KAUlD,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,SAAf,UACE,uBACEC,UAXV,SAAoBC,GACJ,UAAVA,EAAEC,KACJN,KAUMO,KAAK,OACLJ,UAAU,aACVK,YAAY,WAEd,wBAAQL,UAAU,gBAAgBM,QAAST,EAA3C,SACE,qBACEU,MAAM,8BACNC,MAAM,QACNC,OAAO,QACPC,QAAQ,YACRC,KAAK,UALP,SAOE,sBAAMC,EAAE,4VAId,sBAAKZ,UAAU,kBAAf,UACE,oBAAIA,UAAU,SACd,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAU,SACd,wBAAQA,UAAU,qBAAlB,4BAEF,sBAAKA,UAAU,OAAf,UACE,qBAAKV,IAAI,GAAGuB,IAAI,GAAGb,UAAU,SAC7B,qBAAKA,UAAU,cAAf,4BAEF,qBAAKA,UAAU,aACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,kBC7FzBc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAAS8B,eAAe,W","file":"static/js/main.51ad71ae.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport dateFormat from \"dateformat\";\n\nfunction App() {\n  const fetchWeather = async (city) => {\n    try {\n      const response = await fetch(\n        \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n          city +\n          \"&appid=\" +\n          process.env.REACT_APP_API_KEY +\n          \"&units=metric\"\n      );\n      if (response.ok) {\n        const data = await response.json();\n        displayWeather(data);\n      } else if (response.status === 404) {\n        throw new Error(\"404 error\");\n      }\n    } catch (e) {\n      console.log(\"catch error:\" + e.message);\n    }\n  };\n\n  const displayWeather = (data) => {\n    const { name } = data;\n    const { icon, description } = data.weather[0];\n    const { temp, humidity } = data.main;\n    const { speed } = data.wind;\n    const date = new Date();\n    document.querySelector(\".city\").innerText = \"Weather in \" + name;\n    document.querySelector(\".icon\").src =\n      \"https://openweathermap.org/img/wn/\" + icon + \".png\";\n    document.querySelector(\".description\").innerText = description;\n    document.querySelector(\".temp\").innerText =\n      Math.round(temp * 10) / 10 + \"°C\";\n    document.querySelector(\".humidity\").innerText =\n      \"Humidity: \" + humidity + \"%\";\n    document.querySelector(\".wind\").innerText = \"Wind speed: \" + speed + \"km/h\";\n    document.querySelector(\".date\").innerText = dateFormat(\n      date,\n      \"dddd, mmmm dS, yyyy, h:MM TT\"\n    );\n    document.body.style.backgroundImage =\n      \"url('https://source.unsplash.com/1600x900/?\" + name + \"')\";\n  };\n\n  const search = () => {\n    const input = document.querySelector(\".search-bar\").value;\n    if (input === \"\") {\n      return;\n    } else {\n      fetchWeather(input);\n      document.querySelector(\".search-bar\").value = \"\";\n    }\n  };\n\n  function keyHandler(e) {\n    if (e.key === \"Enter\") {\n      search();\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"card\">\n        <div className=\"search\">\n          <input\n            onKeyDown={keyHandler}\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search\"\n          />\n          <button className=\"search-button\" onClick={search}>\n            <svg\n              xmlns=\"https://www.w3.org/2000/svg\"\n              width=\"1.5em\"\n              height=\"1.5em\"\n              viewBox=\"0 0 24 24\"\n              fill=\"#ffffff\"\n            >\n              <path d=\"M23.809 21.646l-6.205-6.205c1.167-1.605 1.857-3.579 1.857-5.711 0-5.365-4.365-9.73-9.731-9.73-5.365 0-9.73 4.365-9.73 9.73 0 5.366 4.365 9.73 9.73 9.73 2.034 0 3.923-.627 5.487-1.698l6.238 6.238 2.354-2.354zm-20.955-11.916c0-3.792 3.085-6.877 6.877-6.877s6.877 3.085 6.877 6.877-3.085 6.877-6.877 6.877c-3.793 0-6.877-3.085-6.877-6.877z\" />\n            </svg>\n          </button>\n        </div>\n        <div className=\"weather loading\">\n          <h2 className=\"city\"></h2>\n          <div className=\"temp-units\">\n            <h1 className=\"temp\"></h1>\n            <button className=\"unit-button hidden\">°C/°F</button>\n          </div>\n          <div className=\"flex\">\n            <img src=\"\" alt=\"\" className=\"icon\" />\n            <div className=\"description\">Search city</div>\n          </div>\n          <div className=\"humidity\"></div>\n          <div className=\"wind\"></div>\n          <div className=\"date\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}